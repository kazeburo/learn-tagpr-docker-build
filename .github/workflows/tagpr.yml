name: tagpr
on:
  push:
    branches:
      - main
jobs:
  tagpr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    env:
      IMAGE_NAME: learn-tagpr-build
      DEV_SAKURACR_REGISTRY: kazeburo-learn-dev.sakuracr.jp
      PROD_SAKURACR_REGISTRY: kazeburo-learn-prod.sakuracr.jp
    steps:
      - uses: actions/checkout@v4
      - uses: Songmu/tagpr@v1
        id: tagpr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Sakura Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PROD_SAKURACR_REGISTRY }}
          username: ${{ secrets.SAKURACR_USER }}
          password: ${{ secrets.SAKURACR_PASSWORD }}
        if: ${{ steps.tagpr.outputs.tag != ''}}

      - name: Build and push to Sakura Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.PROD_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.PROD_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tagpr.outputs.tag }}
        if: ${{ steps.tagpr.outputs.tag != ''}}

      - name: "[DEV] checkout pull request"
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.tagpr.outputs.pull_request).head.sha }}
        if: ${{ steps.tagpr.outputs.pull_request != ''}}

      - name: "[DEV] Login to Sakura Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DEV_SAKURACR_REGISTRY }}
          username: ${{ secrets.DEV_SAKURACR_USER }}
          password: ${{ secrets.DEV_SAKURACR_PASSWORD }}
        if: ${{ steps.tagpr.outputs.pull_request != ''}}

      - name: "[DEV] Build and push to Sakura Container Registry"
        uses: docker/build-push-action@v2
        id: dev_build_push_action
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.DEV_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.DEV_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ fromJson(steps.tagpr.outputs.pull_request).head.ref }}
        if: ${{ steps.tagpr.outputs.pull_request != ''}}

      - name: Create comment.md
        run: |
          cat  << 'EOF' > comment.md
          ## The build and push was succeeded
          Successfully built and pushed the release candidate Docker image for this pull request #${{ fromJson(steps.tagpr.outputs.pull_request).number }}.
          Please check the following images:
          ```
          docker pull ${{ env.DEV_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ fromJson(steps.tagpr.outputs.pull_request).head.ref }}
          docker pull ${{ env.DEV_SAKURACR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ```
          Commit SHA: `${{ fromJson(steps.tagpr.outputs.pull_request).head.sha }}`
          EOF
        if: ${{ steps.tagpr.outputs.pull_request != '' && steps.dev_build_push_action.outcome == 'success'  }}

      - name: Post a comment
        run: |
          gh pr comment ${{ fromJson(steps.tagpr.outputs.pull_request).number }} --body-file comment.md --create-if-none --edit-last
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.tagpr.outputs.pull_request != '' && steps.dev_build_push_action.outcome == 'success'  }}
